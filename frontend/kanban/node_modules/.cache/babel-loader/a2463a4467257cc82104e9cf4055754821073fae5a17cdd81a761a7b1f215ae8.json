{"ast":null,"code":"var _jsxFileName = \"E:\\\\MSD WorkShop\\\\frontend\\\\kanban\\\\src\\\\components\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport { Container, Box, Text } from \"@chakra-ui/react\";\nimport { Stack, HStack, VStack } from '@chakra-ui/react';\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n//import taskApi from \"../api/tasks\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n  const [feedbacks, setFeedbacks] = useState([]);\n  async function getData() {\n    const result = await fetch(\"http://localhost:5000/tasks\");\n    const jresult = await result.json();\n    setFeedbacks(jresult);\n    console.log(jresult);\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n  /*const getToDoSection = async () => {\r\n      try {\r\n          const section = await taskApi.get();\r\n          setData([...data, section])\r\n      } catch (error) {\r\n          alert(error)\r\n      }\r\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"xl\",\n      centerContent: true,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        d: \"flex\",\n        p: 3,\n        w: \"100%\",\n        m: \"40px 0 15px 0\",\n        borderRadius: \"lg\",\n        borderWidth: \"ipx\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"4xl\",\n          textAlign: \"center\",\n          children: \"Task Kanban\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: ['column', 'row'],\n        spacing: \"24px\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          w: \"400px\",\n          h: \"600px\",\n          bg: \"#85aae3\",\n          children: \"To-Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: \"400px\",\n          h: \"600px\",\n          bg: \"#65d9cf\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: \"400px\",\n          h: \"600px\",\n          bg: \"#4fdc95\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), feedbacks === null || feedbacks === void 0 ? void 0 : feedbacks.map(ele => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ele._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false))]\n  }, void 0, true);\n}\n_s(Homepage, \"vfhaC4qeQw+ETo021us0IhlRKlo=\");\n_c = Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["Container","Box","Text","Stack","HStack","VStack","axios","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Homepage","_s","feedbacks","setFeedbacks","getData","result","fetch","jresult","json","console","log","children","maxW","centerContent","d","p","w","m","borderRadius","borderWidth","fontSize","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","h","bg","map","ele","_id","_c","$RefreshReg$"],"sources":["E:/MSD WorkShop/frontend/kanban/src/components/Homepage.js"],"sourcesContent":["import { Container, Box, Text } from \"@chakra-ui/react\"\r\nimport { Stack, HStack, VStack } from '@chakra-ui/react'\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\"\r\n//import taskApi from \"../api/tasks\"\r\n\r\nexport default function Homepage(){\r\n\r\n    const [feedbacks, setFeedbacks] = useState([]);\r\n    async function getData(){\r\n        const result=await fetch(\"http://localhost:5000/tasks\");\r\n        const jresult=await result.json();\r\n        setFeedbacks(jresult);\r\n        console.log(jresult);\r\n    }\r\n    useEffect(()=>{\r\n        getData();\r\n    },[]);\r\n    /*const getToDoSection = async () => {\r\n        try {\r\n            const section = await taskApi.get();\r\n            setData([...data, section])\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }*/\r\n\r\n\r\n    return (<>\r\n        <Container maxW='xl' centerContent>\r\n            <Box d='flex'\r\n                p={3}\r\n                w=\"100%\"\r\n                m=\"40px 0 15px 0\"\r\n                borderRadius=\"lg\"\r\n                borderWidth=\"ipx\"\r\n            >\r\n                <Text fontSize='4xl' textAlign='center'>Task Kanban</Text>\r\n            </Box>\r\n            <Stack direction={['column','row']} spacing='24px'>\r\n                <Box w='400px' h='600px' bg='#85aae3'>\r\n                    To-Do\r\n                </Box>\r\n                <Box w='400px' h='600px' bg='#65d9cf'>\r\n                    Pending\r\n                </Box>\r\n                <Box w='400px' h='600px' bg='#4fdc95'>\r\n                    Completed\r\n                </Box>\r\n            </Stack>\r\n        </Container>\r\n        {feedbacks?.map(ele=>(\r\n            <>\r\n            <h2>{ele._id}</h2>\r\n            </>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}