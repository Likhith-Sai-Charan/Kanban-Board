{"ast":null,"code":"var _jsxFileName = \"E:\\\\MSD WorkShop\\\\frontend\\\\kanban\\\\src\\\\components\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport { Container, Box, Text } from \"@chakra-ui/react\";\nimport { Stack, HStack, VStack } from '@chakra-ui/react';\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n//import taskApi from \"../api/tasks\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Homepage = () => {\n  _s();\n  const [feedbacks, setFeedbacks] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/tasks\").then(responce => {\n      setFeedbacks(responce.data);\n      console.log(feedbacks);\n    }).catch(err => {\n      alert(err);\n    });\n  }, []);\n  /*const getToDoSection = async () => {\r\n      try {\r\n          const section = await taskApi.get();\r\n          setData([...data, section])\r\n      } catch (error) {\r\n          alert(error)\r\n      }\r\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"xl\",\n    centerContent: true,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      p: 3,\n      w: \"100%\",\n      m: \"40px 0 15px 0\",\n      borderRadius: \"lg\",\n      borderWidth: \"ipx\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"4xl\",\n        textAlign: \"center\",\n        children: \"Task Kanban\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: ['column', 'row'],\n      spacing: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"400px\",\n        h: \"600px\",\n        bg: \"#85aae3\",\n        children: \"To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"400px\",\n        h: \"600px\",\n        bg: \"#65d9cf\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"400px\",\n        h: \"600px\",\n        bg: \"#4fdc95\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Homepage, \"vfhaC4qeQw+ETo021us0IhlRKlo=\");\n_c = Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["Container","Box","Text","Stack","HStack","VStack","axios","React","useEffect","useState","jsxDEV","_jsxDEV","Homepage","_s","feedbacks","setFeedbacks","get","then","responce","data","console","log","catch","err","alert","maxW","centerContent","children","d","p","w","m","borderRadius","borderWidth","fontSize","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","h","bg","_c","$RefreshReg$"],"sources":["E:/MSD WorkShop/frontend/kanban/src/components/Homepage.js"],"sourcesContent":["import { Container, Box, Text } from \"@chakra-ui/react\"\r\nimport { Stack, HStack, VStack } from '@chakra-ui/react'\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\"\r\n//import taskApi from \"../api/tasks\"\r\n\r\nexport const Homepage = () => {\r\n\r\n    const [feedbacks, setFeedbacks] = useState([]);\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:5000/tasks\").then((responce)=>{\r\n            setFeedbacks(responce.data)\r\n            console.log(feedbacks);\r\n        }).catch((err)=>{\r\n            alert(err);\r\n        })\r\n    },[])\r\n    /*const getToDoSection = async () => {\r\n        try {\r\n            const section = await taskApi.get();\r\n            setData([...data, section])\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }*/\r\n\r\n\r\n    return (\r\n        <Container maxW='xl' centerContent>\r\n            <Box d='flex'\r\n                p={3}\r\n                w=\"100%\"\r\n                m=\"40px 0 15px 0\"\r\n                borderRadius=\"lg\"\r\n                borderWidth=\"ipx\"\r\n            >\r\n                <Text fontSize='4xl' textAlign='center'>Task Kanban</Text>\r\n            </Box>\r\n            <Stack direction={['column','row']} spacing='24px'>\r\n                <Box w='400px' h='600px' bg='#85aae3'>\r\n                    To-Do\r\n                </Box>\r\n                <Box w='400px' h='600px' bg='#65d9cf'>\r\n                    Pending\r\n                </Box>\r\n                <Box w='400px' h='600px' bg='#4fdc95'>\r\n                    Completed\r\n                </Box>\r\n            </Stack>\r\n        </Container>\r\n    )\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,GAAG,EAAEC,IAAI,QAAQ,kBAAkB;AACvD,SAASC,KAAK,EAAEC,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9CD,SAAS,CAAC,MAAI;IACVF,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAG;MACtDH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAAC;MAC3BC,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;IAC1B,CAAC,CAAC,CAACQ,KAAK,CAAEC,GAAG,IAAG;MACZC,KAAK,CAACD,GAAG,CAAC;IACd,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACL;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,oBACIZ,OAAA,CAACX,SAAS;IAACyB,IAAI,EAAC,IAAI;IAACC,aAAa;IAAAC,QAAA,gBAC9BhB,OAAA,CAACV,GAAG;MAAC2B,CAAC,EAAC,MAAM;MACTC,CAAC,EAAE,CAAE;MACLC,CAAC,EAAC,MAAM;MACRC,CAAC,EAAC,eAAe;MACjBC,YAAY,EAAC,IAAI;MACjBC,WAAW,EAAC,KAAK;MAAAN,QAAA,eAEjBhB,OAAA,CAACT,IAAI;QAACgC,QAAQ,EAAC,KAAK;QAACC,SAAS,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACN5B,OAAA,CAACR,KAAK;MAACqC,SAAS,EAAE,CAAC,QAAQ,EAAC,KAAK,CAAE;MAACC,OAAO,EAAC,MAAM;MAAAd,QAAA,gBAC9ChB,OAAA,CAACV,GAAG;QAAC6B,CAAC,EAAC,OAAO;QAACY,CAAC,EAAC,OAAO;QAACC,EAAE,EAAC,SAAS;QAAAhB,QAAA,EAAC;MAEtC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN5B,OAAA,CAACV,GAAG;QAAC6B,CAAC,EAAC,OAAO;QAACY,CAAC,EAAC,OAAO;QAACC,EAAE,EAAC,SAAS;QAAAhB,QAAA,EAAC;MAEtC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN5B,OAAA,CAACV,GAAG;QAAC6B,CAAC,EAAC,OAAO;QAACY,CAAC,EAAC,OAAO;QAACC,EAAE,EAAC,SAAS;QAAAhB,QAAA,EAAC;MAEtC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAAA1B,EAAA,CA7CYD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}