{"ast":null,"code":"var _jsxFileName = \"E:\\\\MSD WorkShop\\\\frontend\\\\kanban\\\\src\\\\components\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport { Container, Box, Text } from \"@chakra-ui/react\";\nimport { Stack, HStack, VStack } from '@chakra-ui/react';\nimport React, { useEffect, useState } from \"react\";\n//import taskApi from \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Homepage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const getToDoSection = async () => {\n    try {\n      const section = await taskApi.get();\n      setData([...data, section]);\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      bg: \"tomato\",\n      w: \"100%\",\n      p: 4,\n      color: \"white\",\n      children: \"This is the Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"50px\",\n      color: \"tomato\",\n      children: \"Task Kanban\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"40px\",\n        h: \"40px\",\n        bg: \"yellow.200\",\n        children: \"To-Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"40px\",\n        h: \"40px\",\n        bg: \"tomato\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"40px\",\n        h: \"40px\",\n        bg: \"pink.100\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Homepage, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["Container","Box","Text","Stack","HStack","VStack","React","useEffect","useState","jsxDEV","_jsxDEV","Homepage","_s","data","setData","getToDoSection","section","taskApi","get","error","alert","maxW","children","bg","w","p","color","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","spacing","h","_c","$RefreshReg$"],"sources":["E:/MSD WorkShop/frontend/kanban/src/components/Homepage.js"],"sourcesContent":["import { Container, Box, Text } from \"@chakra-ui/react\"\r\nimport { Stack, HStack, VStack } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from \"react\"\r\n//import taskApi from \r\n\r\nexport const Homepage = () => {\r\n\r\n    const [data, setData]=useState([]);\r\n    const getToDoSection = async()=>{\r\n        try{\r\n            const section = await taskApi.get();\r\n            setData([...data,section])\r\n        }catch(error){\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container maxW='xl'>\r\n            <Box bg='tomato' w='100%' p={4} color='white'>\r\n                This is the Box\r\n            </Box>\r\n            <Text fontSize='50px' color='tomato'>Task Kanban</Text>\r\n            <HStack spacing='24px'>\r\n                <Box w='40px' h='40px' bg='yellow.200'>\r\n                    To-Do\r\n                </Box>\r\n                <Box w='40px' h='40px' bg='tomato'>\r\n                    Pending\r\n                </Box>\r\n                <Box w='40px' h='40px' bg='pink.100'>\r\n                    Completed\r\n                </Box>\r\n            </HStack>\r\n        </Container>\r\n    )\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,GAAG,EAAEC,IAAI,QAAQ,kBAAkB;AACvD,SAASC,KAAK,EAAEC,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAS;IAC5B,IAAG;MACC,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAAC;MACnCJ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAACG,OAAO,CAAC,CAAC;IAC9B,CAAC,QAAMG,KAAK,EAAC;MACTC,KAAK,CAACD,KAAK,CAAC;IAChB;EACJ,CAAC;EAGD,oBACIT,OAAA,CAACV,SAAS;IAACqB,IAAI,EAAC,IAAI;IAAAC,QAAA,gBAChBZ,OAAA,CAACT,GAAG;MAACsB,EAAE,EAAC,QAAQ;MAACC,CAAC,EAAC,MAAM;MAACC,CAAC,EAAE,CAAE;MAACC,KAAK,EAAC,OAAO;MAAAJ,QAAA,EAAC;IAE9C;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNpB,OAAA,CAACR,IAAI;MAAC6B,QAAQ,EAAC,MAAM;MAACL,KAAK,EAAC,QAAQ;MAAAJ,QAAA,EAAC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvDpB,OAAA,CAACN,MAAM;MAAC4B,OAAO,EAAC,MAAM;MAAAV,QAAA,gBAClBZ,OAAA,CAACT,GAAG;QAACuB,CAAC,EAAC,MAAM;QAACS,CAAC,EAAC,MAAM;QAACV,EAAE,EAAC,YAAY;QAAAD,QAAA,EAAC;MAEvC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpB,OAAA,CAACT,GAAG;QAACuB,CAAC,EAAC,MAAM;QAACS,CAAC,EAAC,MAAM;QAACV,EAAE,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAEnC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpB,OAAA,CAACT,GAAG;QAACuB,CAAC,EAAC,MAAM;QAACS,CAAC,EAAC,MAAM;QAACV,EAAE,EAAC,UAAU;QAAAD,QAAA,EAAC;MAErC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB,CAAC;AAAAlB,EAAA,CAhCYD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}